setwd("/Users/cc349/Library/CloudStorage/GoogleDrive-cc349@humboldt.edu/My Drive/CGLab_private drive/Projects/Degradation Functional dynamics_comp/DegExp1_dilutions1/DegExp1_analysis_full_clean_dec2023")
fundiv=read.table('output_files/fundiv.txt', header=TRUE)
head(fundiv)
library(plyr)
Div.summary.dataset=ddply(fundiv, .(dataset), summarize, meanR=mean(richness), sdR=sd(richness), meanShann=mean(shannon), sdShan=sd(shannon), meanSimp=mean(simpson), sdSimp=sd(simpson), meanE=mean(evenness), sdE=sd(evenness), minrich=min(richness), maxrich=max(richness), mineve=min(evenness), maxeve=max(evenness))
Div.summary.dilution=ddply(fundiv, .(dilution_tube), summarize, meanR=mean(richness), sdR=sd(richness), meanShann=mean(shannon), sdShan=sd(shannon), meanSimp=mean(simpson), sdSimp=sd(simpson), meanE=mean(evenness), sdE=sd(evenness))
Div.summary.dilution
Div.summary.full=ddply(fundiv, .(dilution_tube, series, dataset), summarize, meanR=mean(richness), sdR=sd(richness), meanShann=mean(shannon), sdShan=sd(shannon), meanSimp=mean(simpson), sdSimp=sd(simpson), meanE=mean(evenness), sdE=sd(evenness))
setwd(dirname(getwd()))
#PATH="~/Library/CloudStorage/GoogleDrive-cc349@humboldt.edu/My Drive/CGLab_private drive/Projects/Degradation Functional dynamics_comp/DegExp1_dilutions1/DegExp1_analysis_Carbon_clean_dec2025/"
knitr::opts_knit$set(root.dir=PATH)
#PATH="~/Library/CloudStorage/GoogleDrive-cc349@humboldt.edu/My Drive/CGLab_private drive/Projects/Degradation Functional dynamics_comp/DegExp1_dilutions1/DegExp1_analysis_Carbon_clean_dec2025/"
knitr::opts_knit$set(root.dir=getwd())
setwd(dirname(getwd()))
#PATH="~/Library/CloudStorage/GoogleDrive-cc349@humboldt.edu/My Drive/CGLab_private drive/Projects/Degradation Functional dynamics_comp/DegExp1_dilutions1/DegExp1_analysis_Carbon_clean_dec2025/"
knitr::opts_knit$set(root.dir=getwd())
# how to deal with the dilution factor data column?
# as continuous (1:5) using the column meta.table$dilution
meta.table$dilution1=factor(meta.table$dilution_tube, levels=c('5', '4', '3', '2', '1', '0')) # as factor
Div.summary.dataset=ddply(meta.div, .(dataset), summarize, meanR=mean(richness), sdR=sd(richness), meanShann=mean(shannon), sdShan=sd(shannon), meanSimp=mean(simpson), sdSimp=sd(simpson), meanE=mean(evenness), sdE=sd(evenness))
# how to deal with the dilution factor data column?
# as continuous (1:5) using the column meta.table$dilution
meta.table$dilution1=factor(meta.table$dilution_tube, levels=c('5', '4', '3', '2', '1', '0')) # as factor
ASVtable=read.table('output_tables_fromPhyloseq/ASVtable_DegExp2025-04-01.txt', header=TRUE)
getwd()
setwd("~/Documents/GitHub/DegExp2019/DegExp2019/scripts")
setwd(dirname(getwd()))
#PATH="~/Library/CloudStorage/GoogleDrive-cc349@humboldt.edu/My Drive/CGLab_private drive/Projects/Degradation Functional dynamics_comp/DegExp1_dilutions1/DegExp1_analysis_Carbon_clean_dec2025/"
knitr::opts_knit$set(root.dir=getwd())
ASVtable=read.table('output_tables_fromPhyloseq/ASVtable_DegExp2025-04-01.txt', header=TRUE)
getwd()
setwd(dirname(getwd()))
PATH="~/"
knitr::opts_knit$set(root.dir=getwd())
# how to deal with the dilution factor data column?
# as continuous (1:5) using the column meta.table$dilution
meta.table$dilution1=factor(meta.table$dilution_tube, levels=c('5', '4', '3', '2', '1', '0')) # as factor
setwd("~/Documents/GitHub/DegExp2019/DegExp2019")
ASVtable=read.table('output_tables_fromPhyloseq/ASVtable_DegExp2025-04-01.txt', header=TRUE)
TAXtable=read.table('output_tables_fromPhyloseq/TAXtable_DegExp2025-04-01.txt', header=TRUE)
meta.table=read.table('output_tables_fromPhyloseq/METAtable_DegExp2025-04-01.txt', header=TRUE)
# Load tables
read.table(MetaDiv_table_DegExp2025-04-01.txt, header=TRUE)
# Load tables
read.table('MetaDiv_table_DegExp2025-04-01.txt', header=TRUE)
# Load tables
read.table('output_tables/MetaDiv_table_DegExp2025-04-01.txt', header=TRUE)
# Load tables
meta.div=read.table('output_tables/MetaDiv_table_DegExp2025-04-01.txt', header=TRUE)
library(arrangeGrob)
library(gridExtra)
meta.div=read.table('output_tables/MetaDiv_table_DegExp2025-04-01.txt',
header=TRUE)
# Plot: richness and evenness changes with dilution treatments
rich.plot=ggplot(meta.div, aes(log(dilution_factor), richness)) +
geom_point(size=3, aes(shape=series, fill=dataset))+
Theme2 + scale_fill_manual(values=c( 'black', 'white')) +
scale_shape_manual(values=c(21,22, 24)) +
#geom_smooth(method='lm', se=FALSE, ) +
xlab('log(Dilution factor)') + ylab('ASV Richness') +
scale_x_reverse() + annotate('text', label='a.', x=0, y=200)
# Load libraries
library(ggplot2)
rich.plot=ggplot(meta.div, aes(log(dilution_factor), richness)) +
geom_point(size=3, aes(shape=series, fill=dataset))+
Theme2 + scale_fill_manual(values=c( 'black', 'white')) +
scale_shape_manual(values=c(21,22, 24)) +
#geom_smooth(method='lm', se=FALSE, ) +
xlab('log(Dilution factor)') + ylab('ASV Richness') +
scale_x_reverse() + annotate('text', label='a.', x=0, y=200)
Theme=theme_classic(base_size=11, base_family="Helvetica") +
theme(axis.line = element_line(linewidth = 1, colour = "black", linetype = "solid")) +
theme(plot.title = element_text(size = 12))+ theme(panel.border=element_rect(fill=NA))
Theme2=Theme+ theme(legend.position="none") + theme(panel.border=element_rect(fill=NA))
rich.plot=ggplot(meta.div, aes(log(dilution_factor), richness)) +
geom_point(size=3, aes(shape=series, fill=dataset))+
Theme2 + scale_fill_manual(values=c( 'black', 'white')) +
scale_shape_manual(values=c(21,22, 24)) +
#geom_smooth(method='lm', se=FALSE, ) +
xlab('log(Dilution factor)') + ylab('ASV Richness') +
scale_x_reverse() + annotate('text', label='a.', x=0, y=200)
even.plot=ggplot(meta.div, aes(log(dilution_factor), evenness)) +
geom_point(size=3,  aes(shape=series, fill=dataset)) +
Theme2 + scale_fill_manual(values=c( 'black', 'white')) +
scale_shape_manual(values=c(21,22, 24)) +
xlab('log(Dilution factor)') + ylab('ASV Evenness') +
scale_x_reverse() + annotate('text', label='b.', x=0, y=0.8)
uni.div=arrangeGrob(rich.plot, even.plot, ncol=2)
#quartz()
plot(uni.div)
ggplot(meta.div, aes(log(dilution_factor), richness)) +
geom_point(size=3, aes(shape=series, fill=dataset))+
Theme2 + scale_fill_manual(values=c( 'black', 'white')) +
scale_shape_manual(values=c(21,22, 24)) +
#geom_smooth(method='lm', se=FALSE, ) +
xlab('log(Dilution factor)') + ylab('ASV Richness') +
scale_x_reverse() + annotate('text', label='a.', x=0, y=200)
ggplot(meta.div, aes(log(dilution_factor), evenness)) +
geom_point(size=3,  aes(shape=series, fill=dataset)) +
Theme2 + scale_fill_manual(values=c( 'black', 'white')) +
scale_shape_manual(values=c(21,22, 24)) +
xlab('log(Dilution factor)') + ylab('ASV Evenness') +
scale_x_reverse() + annotate('text', label='b.', x=0, y=0.8)
ggplot(meta.div, aes(log(dilution_factor), richness)) +
geom_point(size=3, aes(shape=factor(series), fill=dataset))+
Theme2 + scale_fill_manual(values=c( 'black', 'white')) +
scale_shape_manual(values=c(21,22, 24)) +
#geom_smooth(method='lm', se=FALSE, ) +
xlab('log(Dilution factor)') + ylab('ASV Richness') +
scale_x_reverse() + annotate('text', label='a.', x=0, y=200)
rich.plot=ggplot(meta.div, aes(log(dilution_factor), richness)) +
geom_point(size=3, aes(shape=factor(series), fill=dataset))+
Theme2 + scale_fill_manual(values=c( 'black', 'white')) +
scale_shape_manual(values=c(21,22, 24)) +
#geom_smooth(method='lm', se=FALSE, ) +
xlab('log(Dilution factor)') + ylab('ASV Richness') +
scale_x_reverse() + annotate('text', label='a.', x=0, y=200)
even.plot=ggplot(meta.div, aes(log(dilution_factor), evenness)) +
geom_point(size=3,  aes(shape=factor(series), fill=dataset)) +
Theme2 + scale_fill_manual(values=c( 'black', 'white')) +
scale_shape_manual(values=c(21,22, 24)) +
xlab('log(Dilution factor)') + ylab('ASV Evenness') +
scale_x_reverse() + annotate('text', label='b.', x=0, y=0.8)
uni.div=arrangeGrob(rich.plot, even.plot, ncol=2)
#quartz()
plot(uni.div)
print(paste('richness range',
range(meta.div$richness)[1], '-',
range(meta.div$richness)[2], ', mean', mean(meta.div$richness),
'standard deviation', sd(meta.div$richness)))
print(paste('evenness range', range(meta.div$evenness)[1], '-',
range(meta.div$evenness)[2], ', mean', mean(meta.div$evenness),
'standard deviation', sd(meta.div$evenness)))
# RICHNESS
# null model (no relationship)
mod.null=lm(richness~1)
# null model (only random)
mod.null.rand=glmer(richness~1 + (1|series), data=meta.div)
# linear model
mod.rich.lm=lm(richness~log(dilution_factor+1) + dataset, data=meta.div)
summary(mod.rich.lm)
# mixed model
mod.rich.lmei=glmer(richness~log(dilution_factor+1) + dataset + (1|series), data=meta.div)
summary(mod.rich.lmei)
# mixed model
mod.rich.lmei=glmer(richness~log(dilution_factor+1) + dataset + (1|series), data=meta.div)
library(lme4)
library(lme4)
# mixed model
mod.rich.lmei=glmer(richness~log(dilution_factor+1) + dataset + (1|series), data=meta.div)
# mixed model
mod.rich.lmei=lmer(richness~log(dilution_factor+1) + dataset + (1|series), data=meta.div)
summary(mod.rich.lmei)
AIC(mod.null, mod.null.rand,mod.rich.lm, mod.rich.lmei)
# RICHNESS
# null model (no relationship)
mod.null=lm(richness~1)
AIC(mod.null, mod.null.rand,mod.rich.lm, mod.rich.lmei)
# RICHNESS
# null model (no relationship)
mod.null=lm(richness~1)
# RICHNESS
# null model (no relationship)
mod.null=lm(richness~1, data=meta.div)
AIC(mod.null, mod.null.rand,mod.rich.lm, mod.rich.lmei)
# null model (only random)
mod.null.rand=glmer(richness~1 + (1|series), data=meta.div)
AIC(mod.null, mod.null.rand,mod.rich.lm, mod.rich.lmei)
Anova(mod.rich.lmei)
library(car)
head(meta.div)
meta.div$dataset
Anova(mod.rich.lmei)
mod.null.e=lm(evenness~1)
mod.null.e=lm(evenness~1, data=meta.div)
# null model (only random)
mod.null.rand.e=glmer(evenness~1 + (1|series), data=meta.div2)
mod.null.e=lm(evenness~1, data=meta.div)
# null model (only random)
mod.null.rand.e=glmer(evenness~1 + (1|series), data=meta.div)
# linear model
mod.rich.lm.e=lm(evenness~log(dilution_factor+1) + dataset, data=meta.div)
summary(mod.rich.lm)
# mixed model
mod.rich.lmei.e=glmer(evenness~log(dilution_factor+1) + dataset + (1|series), data=meta.div)
summary(mod.rich.lmei)
AIC(mod.null.e, mod.null.rand.e, mod.rich.lm.e, mod.rich.lmei.e)
Anova(mod.rich.lm.e)
