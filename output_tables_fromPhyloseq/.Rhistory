library(dada2)
library(ggplot2)
library(vegan)
library(phyloseq)
library(dplyr)
library(plyr)
setwd("~/Library/CloudStorage/GoogleDrive-cc349@humboldt.edu/My Drive/CGLab_private drive/Projects/Degradation Functional dynamics_comp/DegExp1_dilutions1/DegExp1_analysis_full_clean_dec2023/scripts")
library(lme4)
library(nlme)
library(gridExtra)
Theme=theme_classic(base_size=11, base_family="Helvetica") +
theme(axis.line = element_line(linewidth = 1, colour = "black", linetype = "solid")) +theme(plot.title = element_text(size = 12))
Theme2=Theme+ theme(legend.position="none") + theme(panel.border=element_rect(fill=NA))
setwd("~/Library/CloudStorage/GoogleDrive-cc349@humboldt.edu/My Drive/CGLab_private drive/Projects/Degradation Functional dynamics_comp/DegExp1_dilutions1/DegExp1_analysis_full_clean_dec2023")
ASVtable=read.table('output_tables_fromPhyloseq/ASVtable_DegExp12024-03-22.txt', header=TRUE)
list.files()
list.files('output_tables_fromPhyloseq')
setwd("~/Library/CloudStorage/GoogleDrive-cc349@humboldt.edu/My Drive/CGLab_private drive/Projects/Degradation Functional dynamics_comp/DegExp1_dilutions1/DegExp1_analysis_full_clean_dec2023/output_tables_fromPhyloseq")
ASVtable=read.table('ASVtable_DegExp12024-03-22.txt', header=TRUE)
setwd(dirname(getwd()))
PATH="~/Library/CloudStorage/GoogleDrive-cc349@humboldt.edu/My Drive/CGLab_private drive/Projects/Degradation Functional dynamics_comp/DegExp1_dilutions1/DegExp1_analysis_full_clean_dec2023/"
knitr::opts_knit$set(root.dir=PATH)
seqtab.table.pre= readRDS("output_dada2/May2022-DegExpPRE_SeqJob_ASVnochim_Dec8_2023.rds")
seqtab.table.post= readRDS('output_dada2/July2020_SeqJob_ASVnochim_Nov6_DegExpPOST.rds')
#metadata.pre.raw=read.table('input_data/Metadata_DegExpPRE.txt', header=TRUE)
#metadata.post.raw=read.table("input_data/Metadata_DegExpPOST.txt", header=TRUE)
metadata.all.raw=read.table('input_data/Metadata_DegExp2019.txt', header=TRUE)
taxa.pre=readRDS('output_dada2/May2022-DegExpPRE_SeqJob_TAXA_Dec8_2023.rds')
taxa.post=readRDS('output_dada2/ASV_DegExpPOST_taxa_352021.rds')
metadata.all.raw
getwd
getwd()
list.files()
ASVtable=read.table('output_tables_fromPhyloseq/ASVtable_DegExp12024-03-22.txt', header=TRUE)
ASVtable=read.table('output_tables_fromPhyloseq/ASVtable_DegExp12024-03-22.txt', header=TRUE)
TAXtable=read.table('output_tables_fromPhyloseq/TAXtable_DegExp12024-03-22.txt', header=TRUE)
meta.table=read.table('output_tables_fromPhyloseq/METAtable_DegExp12024-03-22.txt', header=TRUE)
list.files()
ASVtable=read.table('output_tables_fromPhyloseq/ASVtable_DegExp12024-03-22.txt', header=TRUE)
ASVtable=read.table('output_tables_fromPhyloseq/ASVtable_DegExp12024-03-22.txt', header=TRUE)
ASVtable=read.table('output_tables_fromPhyloseq/ASVtable_DegExp12024-03-22.txt', header=TRUE)
ASVtable=read.table('ASVtable_DegExp12024-03-22.txt', header=TRUE)
TAXtable=read.table('TAXtable_DegExp12024-03-22.txt', header=TRUE)
meta.table=read.table('METAtable_DegExp12024-03-22.txt', header=TRUE)
# how to deal with the dilution factor data column?
# as continuous (1:5) using the column meta.table$dilution
meta.table$dilution1=factor(meta.table$dilution_tube, levels=c('5', '4', '3', '2', '1')) # as factor
meta.table$dilution_factor=meta.table$dilution_tube # as continuous but calculating the dilution factor:
# dilution factors for each tube
meta.table[which(meta.table$dilution_factor==1),9]=0.0001
meta.table[which(meta.table$dilution_factor==2),9]=0.001
meta.table[which(meta.table$dilution_factor==3),9]=0.01
meta.table[which(meta.table$dilution_factor==4),9]=0.1
meta.table[which(meta.table$dilution_factor==5),9]=1
meta.table$dilution_factor=as.numeric(meta.table$dilution_factor)
head(meta.table)
meta.table$series=factor(meta.table$series)
head(meta.table)
richness=specnumber(ASVtable)
shannon=diversity(ASVtable, index='shannon')
simpson=diversity(ASVtable, index='simpson')
evenness=shannon/log(richness)
meta.div=data.frame(meta.table, richness, shannon, simpson, evenness)
head(meta.div)
Div.summary=ddply(meta.div, .(dilution_tube, series), summarize, meanR=mean(richness), sdR=sd(richness), meanShann=mean(shannon), sdShan=sd(shannon), meanSimp=mean(simpson), sdSimp=sd(simpson), meanE=mean(evenness), sdE=sd(evenness))
Div.summary
meta.div2=meta.div[-which(meta.div$series=='control'),]
data.frame(dim(meta.div), dim(meta.div2)) # check that the column was eliminated by looking at the dimensions of the datasets
outPATH='output_files/'
date=Sys.Date()
metadiv.table.name=paste(outPATH, 'MetaDiv_table_DegExp1', date,'.txt', sep='')
write.table(meta.div2,  metadiv.table.name, sep='\t')
tube.plot=ggplot(meta.div2, aes(dilution_tube, richness)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset))+ Theme #+ geom_smooth(method='lm', se=FALSE, color='darkgrey', linetype='dashed')+ scale_fill_manual(values=c('white', 'grey', 'black'))
number.plot=ggplot(meta.div2, aes(dilution1, richness)) + geom_point(size=3, color='black', aes( fill=series, shape=dataset))+ Theme #+ geom_smooth(method='lm', se=FALSE, color='darkgrey', linetype='dashed')+ scale_fill_manual(values=c('white', 'grey', 'black'))
factor.plot=ggplot(meta.div2, aes(log(dilution_factor), richness)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset))+ Theme #+ geom_smooth(method='lm', se=FALSE, color='darkgrey', linetype='dashed')+ scale_fill_manual(values=c('white', 'grey', 'black'))
dil.div=arrangeGrob(tube.plot, number.plot, factor.plot, ncol=2)
plot(dil.div)
rich.plot=ggplot(meta.div2, aes(log(dilution_factor), richness)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset))+ Theme + scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
even.plot=ggplot(meta.div2, aes(log(dilution_factor), evenness)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) + Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
shan.plot=ggplot(meta.div2, aes(log(dilution_factor), shannon)) + geom_point(size=3, color='black',  aes( fill=series,shape=dataset))+ Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
simp.plot=ggplot(meta.div2, aes(log(dilution_factor), simpson)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) + Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
uni.div=arrangeGrob(rich.plot, even.plot, shan.plot, simp.plot, ncol=2)
plot(uni.div)
mod.rich1=lm(richness~dilution_factor, data=meta.div2)
mod.rich1b=lm(richness~log(dilution_factor), data=meta.div2)
mod.even1=lm(evenness~dilution_factor, data=meta.div2)
mod.shan1=lm(shannon~dilution_factor, data=meta.div2)
mod.simp1=lm(simpson~dilution_factor, data=meta.div2)
### RIchness
#Random intercept models
mod.rich4.lmei=lme(richness~dilution_factor, data=meta.div2, random=~1|series) #with nlme package
mod.rich4b.lmei=lme(richness~log(dilution_factor), data=meta.div2, random=~1|series) #with nlme package
mod.rich4.lmeri=lmer(richness~dilution_factor + (1|series), data=meta.div2) # with lme4 package
#Random slope and intercept: iteration runs out
#mod.rich4.lmes=lme(richness~dilution.factor, data=meta.div2, random=~dilution.factor|series)
#mod.rich4.lmers=lmer(richness~dilution.factor + (dilution.factor|series), data=meta.div2)
#Evaluate models: compare glmm with lm
anova(mod.rich4.lmei,mod.rich3 ) # mod.rich4.lmeri # - lmerMod class cannot be implemented in anova...
mod.rich.lmei=lme(richness~dilution_factor, data=meta.div2, random=~1|series) #with nlme package
mod.richb.lmei=lme(richness~log(dilution_factor), data=meta.div2, random=~1|series) #with nlme
mod.rich.lmeri=lmer(richness~dilution_factor + (1|series), data=meta.div2) # with lme4 package
mod.rich2.lmes=lme(richness~dilution.factor, data=meta.div2, random=~dilution.factor|series)
#Random slope and intercept: iteration runs out
mod.rich2.lmes=lme(richness~dilution_factor, data=meta.div2, random=~dilution.factor|series)
#Random slope and intercept: iteration runs out
mod.rich2.lmes=lme(richness~dilution_factor, data=meta.div2, random=~dilution_factor|series)
mod.rich2.lmers=lmer(richness~dilution_factor + (dilution.factor|series), data=meta.div2)
mod.rich2.lmers=lmer(richness~dilution_factor + (dilution_factor|series), data=meta.div2)
#Evaluate models: compare glmm with lm
AIC(mod.rich1,mod.rich1b, mod.rich.lmei,  mod.richb.lmei, mod.rich.lmeri)
Anova(mod.rich4.lmei)
library(car)
#Evaluate models: compare glmm with lm
AIC(mod.rich1,mod.rich1b, mod.rich.lmei,  mod.richb.lmei, mod.rich.lmeri)
Anova(mod.rich4.lmei)
Anova(mod.rich.lmei)
physeq.filt2
setwd(dirname(getwd()))
PATH="~/Library/CloudStorage/GoogleDrive-cc349@humboldt.edu/My Drive/CGLab_private drive/Projects/Degradation Functional dynamics_comp/DegExp1_dilutions1/DegExp1_analysis_full_clean_dec2023/"
knitr::opts_knit$set(root.dir=PATH)
library(dada2)
library(ggplot2)
library(vegan)
library(metagenomeSeq)
library(Wrench)
library(phyloseq)
library(dplyr)
library(plyr)
seqtab.table.pre= readRDS("output_dada2/May2022-DegExpPRE_SeqJob_ASVnochim_Dec8_2023.rds")
seqtab.table.post= readRDS('output_dada2/July2020_SeqJob_ASVnochim_Nov6_DegExpPOST.rds')
#metadata.pre.raw=read.table('input_data/Metadata_DegExpPRE.txt', header=TRUE)
#metadata.post.raw=read.table("input_data/Metadata_DegExpPOST.txt", header=TRUE)
metadata.all.raw=read.table('input_data/Metadata_DegExp2019.txt', header=TRUE)
taxa.pre=readRDS('output_dada2/May2022-DegExpPRE_SeqJob_TAXA_Dec8_2023.rds')
taxa.post=readRDS('output_dada2/ASV_DegExpPOST_taxa_352021.rds')
# not currently needed
rownames(metadata.all.raw)=metadata.all.raw$Sampleid
rownames(metadata.all.raw)
physeq.degexp1.pre=phyloseq(otu_table(seqtab.table.pre, taxa_are_rows=FALSE), sample_data(metadata.all.raw[which(metadata.all.raw$dataset=='pre'),]), tax_table(taxa.pre))
physeq.degexp1.pre
physeq.degexp1.post=phyloseq(otu_table(seqtab.table.post, taxa_are_rows=FALSE), sample_data(metadata.all.raw[which(metadata.all.raw$dataset=='post'),]), tax_table(taxa.post))
physeq.degexp1.post
physeq.degexp1=merge_phyloseq(physeq.degexp1.pre, physeq.degexp1.post)
ASV.read.count=data.frame(t(otu_table(physeq.degexp1)))
metaSeqObject1=newMRexperiment(ASV.read.count)
p=cumNormStatFast(metaSeqObject1)
metaSeqObject_CSS=cumNorm(metaSeqObject1, p) # CSS normalization function
metaSeqObject_CSS_filt=filterData(metaSeqObject_CSS)
seq.asv.css=data.frame(MRcounts(metaSeqObject_CSS_filt, norm=TRUE, log=TRUE)) # back to an asv table, now css corrected
physeq.degexp1.norm=merge_phyloseq(physeq.degexp1, otu_table(seq.asv.css, taxa_are_rows=FALSE))
physeq.degexp1.norm
hist(sample_sums(otu_table(physeq.degexp1.norm, taxa_are_rows=FALSE)), breaks=100)
data.frame(readmeans=mean(sample_sums(physeq.degexp1.norm)),readrange=range(sample_sums(physeq.degexp1.norm)))
# create a list of samples to keep
sdt1=data.frame(as(sample_data(physeq.degexp1.norm), 'data.frame'), TotalReads= sample_sums(physeq.degexp1.norm), keep.sample=sample_sums(physeq.degexp1.norm)>3000, keep.rownames=TRUE)
sdt1
# filter phyloseq object
physeq.degexp1.norm.filt1=prune_samples(sample_sums(physeq.degexp1.norm)>=3000, physeq.degexp1.norm)
physeq.degexp1.norm.filt1
# check that the number of samples changed as expected
sdt2=data.frame(as(sample_data(physeq.degexp1.norm.filt1), 'data.frame'), TotalReads= sample_sums(physeq.degexp1.norm.filt1), keep.sample=sample_sums(physeq.degexp1.norm.filt1)>3000, keep.rownames=TRUE)
sdt2
hist(sample_sums(physeq.degexp1.norm.filt1), breaks=10)
mean(sample_sums(physeq.degexp1.norm.filt1))
nsamples(physeq.degexp1)-nsamples(physeq.degexp1.norm.filt1)
retained_samples=ddply(sample_data(physeq.degexp1.norm.filt1), .(dilution_tube, series), summarize, num_samples=length(dilution_tube))
retained_samples
physeq.degexp1.norm.filt1
physeq.BA=subset_taxa(physeq.degexp1.norm.filt1, Kingdom=='Bacteria' |  Kingdom=='Archaea')
data.frame(filtered=ntaxa(physeq.BA),raw=ntaxa(physeq.degexp1), filtered.out=ntaxa(physeq.degexp1)-ntaxa(physeq.BA))
# only 1 ASV was removed
physeq.BAwMit=subset_taxa(physeq.BA, Family!='Mitochondria')
data.frame(filtered=ntaxa(physeq.BAwMit),raw=ntaxa(physeq.degexp1.norm.filt1), filtered.out=ntaxa(physeq.BA)-ntaxa(physeq.BAwMit))
# 380 were removed
physeq.filt2=filter_taxa(physeq.BAwMit, function(x) mean(x)>10, TRUE)
data.frame(filtered=ntaxa(physeq.filt2),raw=ntaxa(physeq.BAwMit), filtered.out=ntaxa(physeq.BAwMit)-ntaxa(physeq.filt2)) # 1920 taxa were removed this is a lot! I assume they were in the samples filtered out but still.
physeq.filt2
physeq.filt2
physeq.filt2=filter_taxa(physeq.BAwMit, function(x) mean(x)>1, TRUE)
physeq.filt2
physeq.filt2=filter_taxa(physeq.BAwMit, function(x) mean(x)>0, TRUE)
data.frame(filtered=ntaxa(physeq.filt2),raw=ntaxa(physeq.BAwMit), filtered.out=ntaxa(physeq.BAwMit)-ntaxa(physeq.filt2)) # 1920 taxa were removed this is a lot! I assume they were in the samples filtered out but still.
physeq.filt2
sample_sums(otu_table(physeq.degexp1.norm, taxa_are_rows=FALSE))
sum(sample_sums(otu_table(physeq.degexp1.norm, taxa_are_rows=FALSE)))
# total number of reads
sum(sample_sums(otu_table(physeq.filt2, taxa_are_rows=FALSE)))
# total number of reads
sum(sample_sums(otu_table(physeq.filt2, taxa_are_rows=FALSE)))
# reads per sample
sum(sample_sums(otu_table(physeq.filt2, taxa_are_rows=FALSE)))/nsamples(physeq.filt2)
# number of phyla
# number of families
# number of genera
# standard deviation of reads
std(sample_sums(otu_table(physeq.filt2, taxa_are_rows=FALSE))))
# standard deviation of reads
std(sample_sums(otu_table(physeq.filt2, taxa_are_rows=FALSE)))
# standard deviation of reads
sd(sample_sums(otu_table(physeq.filt2, taxa_are_rows=FALSE)))
# number of phyla
get_taxa_unique(physeq.filt2)
# number of phyla
get_taxa_unique(physeq.filt2, 'Phylum')
# number of phyla
length(get_taxa_unique(physeq.filt2, 'Phylum'))
get_taxa_unique(physeq.filt2, 'Phylum')
# number of families
length(get_taxa_unique(physeq.filt2, 'Family'))
# number of genera
length(get_taxa_unique(physeq.filt2, 'Genera'))
# number of genera
length(get_taxa_unique(physeq.filt2, 'Genra'))
# number of genera
length(get_taxa_unique(physeq.filt2, 'Genus'))
get_taxa_unique(physeq.filt2, 'Phylum')
# how many are archaea
subset_taxa(physeq.degexp1.norm.filt1, Kingdom=='Archaea')
# how many are archaea
physeq.Arc=subset_taxa(physeq.degexp1.norm.filt1, Kingdom=='Archaea')
length(get_taxa_unique(physeq.Arc, 'Phylum'))
21-4
plot(uni.div)
rich.plot=ggplot(meta.div2, aes(log(dilution_factor), richness)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset))+ Theme2 + scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
even.plot=ggplot(meta.div2, aes(log(dilution_factor), evenness)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) + Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
shan.plot=ggplot(meta.div2, aes(log(dilution_factor), shannon)) + geom_point(size=3, color='black',  aes( fill=series,shape=dataset))+ Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
simp.plot=ggplot(meta.div2, aes(log(dilution_factor), simpson)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) + Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
uni.div=arrangeGrob(rich.plot, even.plot, ncol=2)
plot(uni.div)
plot(uni.div)
Theme=theme_classic(base_size=11, base_family="Helvetica") +
theme(axis.line = element_line(linewidth = 1, colour = "black", linetype = "solid")) +theme(plot.title = element_text(size = 12))+ theme(panel.border=element_rect(fill=NA))
Theme2=Theme+ theme(legend.position="none") + theme(panel.border=element_rect(fill=NA))
rich.plot=ggplot(meta.div2, aes(log(dilution_factor), richness)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset))+ Theme2 + scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24)) + annotate('text', x=100, y=-10, label='a.')
even.plot=ggplot(meta.div2, aes(log(dilution_factor), evenness)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) + Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24)) + annotate('text', x=0.99, y=-10, label='a.')
shan.plot=ggplot(meta.div2, aes(log(dilution_factor), shannon)) + geom_point(size=3, color='black',  aes( fill=series,shape=dataset))+ Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
simp.plot=ggplot(meta.div2, aes(log(dilution_factor), simpson)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) + Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
uni.div=arrangeGrob(rich.plot, even.plot, ncol=2)
plot(uni.div)
rich.plot=ggplot(meta.div2, aes(log(dilution_factor), richness)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset))+ Theme2 + scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24)) + annotate('text', x=-10, y=100, label='a.')
even.plot=ggplot(meta.div2, aes(log(dilution_factor), evenness)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) + Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24)) + annotate('text', x=-10, y=0.99, label='a.')
shan.plot=ggplot(meta.div2, aes(log(dilution_factor), shannon)) + geom_point(size=3, color='black',  aes( fill=series,shape=dataset))+ Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
simp.plot=ggplot(meta.div2, aes(log(dilution_factor), simpson)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) + Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
uni.div=arrangeGrob(rich.plot, even.plot, ncol=2)
plot(uni.div)
plot(uni.div)
head(meta.div2)
#
range(meta.div2$richness)
#
meta.div2[which(meta.div2$dataset=='pre'),]
#
meta.div2.pre=meta.div2[which(meta.div2$dataset=='pre'),]
range(meta.div2.pre$richness)
# mean richness for post-degradation data
meta.div2.post=meta.div2[which(meta.div2$dataset=='post'),]
mean(meta.div2.post$richness)
mean(meta.div2.pre$richness)
mod.rich1=lm(richness~dilution_factor, data=meta.div2)
mod.rich1b=lm(richness~log(dilution_factor), data=meta.div2)
mod.even1=lm(evenness~dilution_factor, data=meta.div2)
mod.shan1=lm(shannon~dilution_factor, data=meta.div2)
mod.simp1=lm(simpson~dilution_factor, data=meta.div2)
### RIchness
#Random intercept models
mod.rich.lmei=lme(richness~dilution_factor, data=meta.div2, random=~1|series) #with nlme package
mod.richb.lmei=lme(richness~log(dilution_factor), data=meta.div2, random=~1|series) #with nlme package
mod.rich.lmeri=lmer(richness~dilution_factor + (1|series), data=meta.div2) # with lme4 package
#Random slope and intercept: iteration runs out
mod.rich2.lmes=lme(richness~dilution_factor, data=meta.div2, random=~dilution_factor|series)
#Evaluate models: compare glmm with lm
AIC(mod.rich1,mod.rich1b, mod.rich.lmei,  mod.richb.lmei, mod.rich.lmeri)
summary(mod.rich.lmei)
#Evaluate models: compare glmm with lm
AIC(mod.rich1,mod.rich1b, mod.rich.lmei,  mod.richb.lmei, mod.rich.lmeri)
summary(mod.rich.lmei)
Anova(mod.rich.lmei)
#Evaluate models: compare glmm with lm
AIC(mod.rich1,mod.rich1b, mod.rich.lmei,  mod.richb.lmei, mod.rich.lmeri)
summary(mod.rich.lmei)
Anova(mod.rich.lmei)
mod.null=lm(richness~1, data=meta.div2)
#Evaluate models: compare glmm with lm
AIC(mod.rich1,mod.rich1b, mod.rich.lmei,  mod.richb.lmei, mod.rich.lmeri)
mod.null=lm(richness~1, data=meta.div2)
mod.rich1=lm(richness~dilution_factor*dataset, data=meta.div2)
mod.rich1b=lm(richness~log(dilution_factor), data=meta.div2)
mod.even1=lm(evenness~log(dilution_factor), data=meta.div2)
mod.shan1=lm(shannon~log(dilution_factor), data=meta.div2)
mod.simp1=lm(simpson~log(dilution_factor), data=meta.div2)
#Random intercept models
mod.rich.lmei=lme(richness~dilution_factor, data=meta.div2, random=~1|series) #with nlme package
mod.richb.lmei=lme(richness~log(dilution_factor), data=meta.div2, random=~1|series) #with nlme package
mod.rich.lmeri=lmer(richness~dilution_factor + (1|series), data=meta.div2) # with lme4 package
#Random slope and intercept: iteration runs out
mod.rich2.lmes=lme(richness~log(dilution_factor), data=meta.div2, random=~dilution_factor|series)
#Evaluate models: compare glmm with lm
AIC(mod.null, mod.rich1, mod.rich1b, mod.rich.lmei,  mod.richb.lmei, mod.rich.lmeri)
mod.null=lm(richness~1, data=meta.div2)
mod.rich1=lm(richness~dilution_factor*dataset, data=meta.div2)
mod.rich1b=lm(richness~log(dilution_factor)*dataset, data=meta.div2)
#Random intercept models
mod.rich.lmei=lme(richness~dilution_factor*dataset, data=meta.div2, random=~1|series) #with nlme package
mod.richb.lmei=lme(richness~log(dilution_factor)*dataset, data=meta.div2, random=~1|series) #with nlme package
mod.rich.lmeri=lmer(richness~dilution_factor*dataset + (1|series), data=meta.div2) # with lme4 package
#Random slope and intercept: iteration runs out
mod.rich2.lmes=lme(richness~log(dilution_factor), data=meta.div2, random=~dilution_factor|series)
#Evaluate models: compare glmm with lm
AIC(mod.null, mod.rich1, mod.rich1b, mod.rich.lmei,  mod.richb.lmei, mod.rich.lmeri)
summary(mod.rich.lmei)
Anova(mod.rich.lmei)
#Evaluate models: compare glmm with lm
AIC(mod.null, mod.rich1, mod.rich1b, mod.rich.lmei,  mod.richb.lmei, mod.rich.lmeri)
summary(mod.rich.lmei)
Anova(mod.rich.lmei)
summary(mod.rich.lmei)
summary(mod.rich.lmei)
# model to estimate slope (only pre)
mod.rich.lmei.pre=lme(richness~dilution_factor, data=meta.div2.pre, random=~1|series) #with nlme
summary(mod.rich.lmei.pre)
rich.plot=ggplot(meta.div2, aes(log(dilution_factor), richness)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset))+ Theme2 + scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24)) + annotate('text', x=-10, y=100, label='a.')
even.plot=ggplot(meta.div2, aes(log(dilution_factor), evenness)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) + Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24)) + annotate('text', x=-10, y=0.99, label='a.')
shan.plot=ggplot(meta.div2, aes(log(dilution_factor), shannon)) + geom_point(size=3, color='black',  aes( fill=series,shape=dataset))+ Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
simp.plot=ggplot(meta.div2, aes(log(dilution_factor), simpson)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) + Theme2+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
uni.div=arrangeGrob(rich.plot, even.plot, ncol=2)
plot(uni.div)
rich.plot=ggplot(meta.div2, aes(log(dilution_factor), richness)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset))+ Theme2 + scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24)) + annotate('text', x=-10, y=100, label='a.')
even.plot=ggplot(meta.div2, aes(log(dilution_factor), evenness)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) + Theme2 + scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24)) + annotate('text', x=-10, y=0.99, label='a.')
shan.plot=ggplot(meta.div2, aes(log(dilution_factor), shannon)) + geom_point(size=3, color='black',  aes( fill=series,shape=dataset))+ Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
simp.plot=ggplot(meta.div2, aes(log(dilution_factor), simpson)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) + Theme2+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
uni.div=arrangeGrob(rich.plot, even.plot, ncol=2)
plot(uni.div)
plot(uni.div)
rich.plot=ggplot(meta.div2, aes(log(dilution_factor), richness)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset))+ Theme2 + scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24)) + annotate('text', x=-10, y=100, label='a.')
even.plot=ggplot(meta.div2, aes(log(dilution_factor), evenness)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) + Theme2 + scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24)) + annotate('text', x=-10, y=0.99, label='b.')
shan.plot=ggplot(meta.div2, aes(log(dilution_factor), shannon)) + geom_point(size=3, color='black',  aes( fill=series,shape=dataset))+ Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
simp.plot=ggplot(meta.div2, aes(log(dilution_factor), simpson)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) + Theme2+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
uni.div=arrangeGrob(rich.plot, even.plot, ncol=2)
plot(uni.div)
plot(uni.div)
rich.plot=ggplot(meta.div2, aes(log(dilution_factor), richness)) +
geom_point(size=3, color='black',  aes( fill=series, shape=dataset))+
Theme2 + scale_fill_manual(values=c('white', 'grey', 'black')) +
scale_shape_manual(values=c(21, 24)) +
annotate('text', x=-10, y=100, label='a.') +
xlab('Log(Dilution factor)') + ylab('ASV Richness')
even.plot=ggplot(meta.div2, aes(log(dilution_factor), evenness)) +
geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) +
Theme2 + scale_fill_manual(values=c('white', 'grey', 'black')) +
scale_shape_manual(values=c(21, 24)) +
annotate('text', x=-10, y=0.99, label='b.') +
xlab('Log(Dilution factor)') + ylab('ASV Evenness')
shan.plot=ggplot(meta.div2, aes(log(dilution_factor), shannon)) + geom_point(size=3, color='black',  aes( fill=series,shape=dataset))+ Theme+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
simp.plot=ggplot(meta.div2, aes(log(dilution_factor), simpson)) + geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) + Theme2+ scale_fill_manual(values=c('white', 'grey', 'black')) + scale_shape_manual(values=c(21, 24))
uni.div=arrangeGrob(rich.plot, even.plot, ncol=2)
plot(uni.div)
plot(uni.div)
rich.plot=ggplot(meta.div2, aes(log(dilution_factor), richness)) +
geom_point(size=3, color='black',  aes( fill=series, shape=dataset))+
Theme2 + scale_fill_manual(values=c('white', 'grey', 'black')) +
scale_shape_manual(values=c(21, 24)) +
annotate('text', x=-10, y=100, label='a.') +
xlab('Log(Dilution factor)') + ylab('ASV Richness')
even.plot=ggplot(meta.div2, aes(log(dilution_factor), evenness)) +
geom_point(size=3, color='black',  aes( fill=series, shape=dataset)) +
Theme2 + scale_fill_manual(values=c('white', 'grey', 'black')) +
scale_shape_manual(values=c(21, 24)) +
annotate('text', x=-10, y=0.9, label='b.') +
xlab('Log(Dilution factor)') + ylab('ASV Evenness')
uni.div=arrangeGrob(rich.plot, even.plot, ncol=2)
plot(uni.div)
plot(uni.div)
log(1)
summary(mod.rich.lmei.pre)
physeq.filt2
45+45
90-23
physeq.degexp1.norm
